# шаблон labels
x-traefik-labels: &traefik-labels
  - "traefik.enable=true"

x-service-template: &service-template
  networks:
    - microservices
  labels:
    - *traefik-labels

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - microservices

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  bd_connector:
    build: ./bd_connector/
    container_name: bd_connector
    volumes:
      - ./Data:/Data
    <<: *service-template
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    labels:
      - "traefik.http.routers.bd_connector.rule=PathPrefix(`/api/bd`)"
      - "traefik.http.services.bd_connector.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.bd_connector-strip.stripprefix.prefixes=/api/bd"
      - "traefik.http.routers.bd_connector.middlewares=bd_connector-strip"

  amo_send:
    build: ./amo_send/
    container_name: amo_send
    volumes:
      - ./Data:/Data
    <<: *service-template
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.send_amo.rule=PathPrefix(`/api/send_amo`)"
      - "traefik.http.services.send_amo.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.send_amo-strip.stripprefix.prefixes=/api/send_amo"
      - "traefik.http.routers.send_amo.middlewares=send_amo-strip"
    env_file:
      - .env

  telegram_bot:
    build: ./telegram_bot/
    container_name: telegram_bot
    volumes:
      - ./Data:/Data
    <<: *service-template
    depends_on:
      - amo_send
      - bd_connector
      - rabbitmq
    labels:
      - "traefik.http.routers.telegram_bot.rule=PathPrefix(`/api/telegram_bot`)"
      - "traefik.http.services.telegram_bot.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.telegram_bot-strip.stripprefix.prefixes=/api/telegram_bot"
      - "traefik.http.routers.telegram_bot.middlewares=telegram_bot-strip"
    env_file:
      - .env

  amo_get:
    build: ./amo_get/
    container_name: amo_get
    volumes:
      - ./Data:/Data
    <<: *service-template
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.get_amo.rule=PathPrefix(`/webhook`)"
      - "traefik.http.services.get_amo.loadbalancer.server.port=8000"
    env_file:
      - .env

networks:
  microservices:

volumes:
  rabbitmq_data:
